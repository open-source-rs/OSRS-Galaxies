{
  "category": "OSRS-MITRE-Lateral-Movement",
  "description": "Lateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. Following through on their primary objective often requires exploring the network to find their target and subsequently gaining access to it. Reaching their objective often involves pivoting through multiple systems and accounts to gain. Adversaries might install their own remote access tools to accomplish Lateral Movement or use legitimate credentials with native network and operating system tools, which may be stealthier.",
  "name": "OSRS-MITRE-Lateral-Movement",
  "source": "MITRE ATT&CK",
  "type": "OSRS-MITRE-Lateral-Movement",
  "uuid": "578d9ca2-fa3c-11e9-8f0b-362b9e155667",
  "values": [
	  {
      "description": "Test place holder",
      "meta": {
        "refs": [
          "https://attack.mitre.org/tactics/TA0008/"
        ]
      },
      "uuid": "6649c17e-fa43-11e9-8f0b-362b9e155667",
      "value": "Test OSRS-MITRE-Lateral-Movement Value"
    },
	{
      "description": "macOS and OS X applications send AppleEvent messages to each other for interprocess communications (IPC). These messages can be easily scripted with AppleScript for local or remote IPC. Osascript executes AppleScript and any other Open Scripting Architecture (OSA) language scripts. A list of OSA languages installed on a system can be found by using the osalang program.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1155"
        ]
      },
      "uuid": "6779a7f8-fabb-11e9-aad5-362b9e155667",
      "value": "AppleScript T1155"
    },
	{
      "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1527"
        ]
      },
      "uuid": "6779aa82-fabb-11e9-aad5-362b9e155667",
      "value": "Application Access Token T1527"
    },
	{
      "description": "Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators. The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the deployment server, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform software deployment.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/tactics/TA0008/"
        ]
      },
      "uuid": "6779abd6-fabb-11e9-aad5-362b9e155667",
      "value": "Application Deployment Software T1017"
    },
	{
      "description": "Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1175"
        ]
      },
      "uuid": "6779ad0c-fabb-11e9-aad5-362b9e155667",
      "value": "Component Object Model and Distributed COM T1175"
    },
	{
      "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged attack where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1534"
        ]
      },
      "uuid": "f6f6d838-fabb-11e9-8f0b-362b9e155667",
      "value": "Internal Spearphishing T1534"
    },
	{
      "description": "Windows allows logon scripts to be run whenever a specific user or group of users log into a system. The scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1037"
        ]
      },
      "uuid": "f6f6dafe-fabb-11e9-8f0b-362b9e155667",
      "value": "Logon Scripts T1037"
    },
	{
      "description": "Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash. In this technique, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1075"
        ]
      },
      "uuid": "f6f6dc66-fabb-11e9-8f0b-362b9e155667",
      "value": "Pass the Hash T1075"
    },
	{
      "description": "Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1097"
        ]
      },
      "uuid": "f6f6ddba-fabb-11e9-8f0b-362b9e155667",
      "value": "Pass the Ticket T1097"
    },
	{
      "description": "Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). There are other implementations and third-party tools that provide graphical access Remote Services similar to RDS.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1076"
        ]
      },
      "uuid": "f6f6df04-fabb-11e9-8f0b-362b9e155667",
      "value": "Remote Desktop Protocol T1076"
    },
	{
      "description": "Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Files may be copied from an external adversary-controlled system through the Command and Control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1105"
        ]
      },
      "uuid": "547ff73c-fabc-11e9-8f0b-362b9e155667",
      "value": "Remote File Copy T1105"
    },
	{
      "description": "An adversary may use Valid Accounts to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1021"
        ]
      },
      "uuid": "547ff9f8-fabc-11e9-8f0b-362b9e155667",
      "value": "Remote Services T1021"
    },
	{
      "description": "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1091"
        ]
      },
      "uuid": "547ffdf4-fabc-11e9-8f0b-362b9e155667",
      "value": "Replication Through Removable Media T1091"
    },
	{
      "description": "Adversaries may add malicious content to an internally accessible website through an open network file share that contains the website's webroot or Web content directory and then browse to that content with a Web browser to cause the server to execute the malicious content. The malicious content will typically run under the context and permissions of the Web server process, often resulting in local system or administrative privileges, depending on how the Web server is configured.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1051"
        ]
      },
      "uuid": "547fff66-fabc-11e9-8f0b-362b9e155667",
      "value": "Shared Webroot T1051"
    },
	{
      "description": "Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1184"
        ]
      },
      "uuid": "5480009c-fabc-11e9-8f0b-362b9e155667",
      "value": "SSH Hijacking T1184"
    },
	{
      "description": "Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1080"
        ]
      },
      "uuid": "b8b0c72c-fabc-11e9-8f0b-362b9e155667",
      "value": "Taint Shared Content T1080"
    },
	{
      "description": "Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, VNC, HBSS, Altiris, etc.). If an adversary gains access to these systems, then they may be able to execute code.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1072"
        ]
      },
      "uuid": "b8b0cd6c-fabc-11e9-8f0b-362b9e155667",
      "value": "Third-party Software T1072"
    },
	{
      "description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1506"
        ]
      },
      "uuid": "b8b0cefc-fabc-11e9-8f0b-362b9e155667",
      "value": "Web Session Cookie T1506"
    },
	{
      "description": "Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include C, ADMIN, and IPC.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1077"
        ]
      },
      "uuid": "b8b0d032-fabc-11e9-8f0b-362b9e155667",
      "value": "Windows Admin Shares T1077"
    },
	{
      "description": "Windows Remote Management (WinRM) is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services). It may be called with the winrm command or by any number of programs such as PowerShell.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1028"
        ]
      },
      "uuid": "f3c2975a-fabc-11e9-8f0b-362b9e155667",
      "value": "Windows Remote Management T1028"
    },
	{
      "description": "Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.",
      "meta": {
        "refs": [
          "https://attack.mitre.org/techniques/T1210"
        ]
      },
      "uuid": "6779ae38-fabb-11e9-aad5-362b9e155667",
      "value": "Exploitation of Remote Services T1210"
    }
	  ],
	"version": 3
}
